# üêí Treehouse ‚Äî Local Dev Orchestration CLI

Treehouse is a Golang-based CLI tool for orchestrating local development services.  
It replaces the use of ad hoc Vite plugins or Procfiles with a single YAML configuration that defines:

- core services that always start with `treehouse start`
- optional services that can be started individually or included selectively
- alternate command variants for specific modes (e.g., `with-auth`)
- structured command-line behavior for full-service start or single-process experimentation

---

## üéØ Goals

- Provide a lightweight, language-agnostic local dev orchestrator.
- Enable simple workflows for starting and stopping dev services.
- Avoid duplicated config (no Procfile + spm config split).
- Stay terminal-native and maintainable by small teams.
- Be extendable later (TUI, remote orchestration, retries, etc).

---

## üßæ YAML Config Schema (configs/devctl.yaml)

```yaml
core_services:
  ui-server:
    command: "ui-server --env development"
    modes:
      with-auth: "ui-server --env with-auth"
  spa-ui:
    command: "pnpm --filter spa-ui dev"
  temporal:
    command: "temporal dev-server start"

optional_services:
  oidc-server:
    command: "oidc-server --port 3000"
  codec-server:
    command: "codec-server --port 5000"
